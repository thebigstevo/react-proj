# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: "CI/CD Pipeline for React App to AWS EKS"

on:
  push:
    branches: ['master', 'main']
  pull_request:
    branches: ['master', 'main']

permissions:
    contents: write   
env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  
  AWS_DEFAULT_REGION: "eu-west-1"    

jobs:
    runs-on: ubuntu-latest
    needs: ['build', 'push-docker-image', 'provision-aws-eks-cluster']
    steps:
      - name: AWS EKS Deployment
        uses: actions/checkout@v3

      - name: Pull the Docker image
        run: docker pull devksom/react-proj:latest

      - name: Update kubeconfig
        run: aws eks --region eu-west-1 update-kubeconfig --name react-proj-cluster
        env:
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION}}    
    
      - name: Apply deployment
        run: kubectl apply -f deployment.yaml 
        env:
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION}} 

      - name: Expose service
        run: kubectl expose deployment prodxcloud-deployment --type=LoadBalancer --name=my-service  
        env:
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION}}

      - name: Load Balancer DNS
        run: kubectl get services my-service 
        env:
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION}}